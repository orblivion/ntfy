{
	# Caddy by default supports https (and even handles ACME certs). For our
	# purposes this is annoying at best.
	auto_https off

	# The admin API would let you edit this config over http (!) at localhost:2019
	# Sandstorm presumably wouldn't allow outside requests to hit it but who knows.
	admin off

	# TODO - If we upgrade Caddy we can do this and probably have one less
	# log entry. For now this config will "persist" in the "fake home".
	# persist_config off
}

# Handling all IPs at this port. If I specify localhost, requests do show up in
# the logs (if I set it to log all requests below), but the page won't show up
# in the browser.
# TODO I don't know exactly why this is the case. I wonder if there's anything
#   unsafe here?
:8080 {
	log {
		output stdout
		format json
		level error # removing this line defaults to "info" which logs every request
	}

	# We prefix api requests with /api-prefix-1234/ in sandstorm-pkgdef. Now that
	# we've identified the api trying to access webroot and blocked it, we can use
	# handle_path to strip the prefix back away and pass the real path to ntfy.
	handle_path /api-prefix-1234/* {
		# Stop the API from accessing the web root
		handle {$NTFY_WEB_ROOT} {
			respond 404
		}
		handle {$NTFY_WEB_ROOT}/* {
			respond 404
		}
		rewrite * {uri}
	}

	# Everything else should be under the web root
	handle {
		rewrite * {$NTFY_WEB_ROOT}{uri}
	}

	reverse_proxy :8081 {
		# See: https://caddyserver.com/docs/caddyfile/directives/reverse_proxy#load-balancing

		# Retry for up to 5 seconds if the app hasn't started yet.
		lb_try_duration 5s

		# By default lb_try_interval is .250. To match 5 seconds we want 20 retries.
		lb_retries 20
	}
}
